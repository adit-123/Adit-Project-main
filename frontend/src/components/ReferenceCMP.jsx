import React, { useState, useEffect } from 'react';

const ReferenceForm = () => {
  // State for the reference form
  const [referenceForm, setReferenceForm] = useState({
    ourReference: '',
    leadGeneratedBy: '',
    specialRemark: '',
    suggestions: '',
  });

  // State for storing name, mobile number, and GST number from localStorage
  const [userDetails, setUserDetails] = useState({
    name: '',
    mobileNo: '',
    gstNo: '',
  });

  // Load name, mobileNo, and gstNo from localStorage when the component mounts
  useEffect(() => {
    const storedName = localStorage.getItem('name') || '';
    const storedMobileNo = localStorage.getItem('mobile') || '';
    const storedGstNo = localStorage.getItem('gst') || '';

    setUserDetails({
      name: storedName,
      mobileNo: storedMobileNo,
      gstNo: storedGstNo,
    });
  }, []);

  // Handle input changes for the reference form
  const handleReferenceChange = (event) => {
    const { name, value } = event.target;
    setReferenceForm({
      ...referenceForm,
      [name]: value,
    });
  };

  // Handle submission of the reference form
 // Submit form and structure the data correctly
const handleSubmit = async (event) => {
  event.preventDefault();
  
  const products = JSON.parse(localStorage.getItem('productForms')) || [];
  console.log(referenceForm);
  
  const combinedData = {
    name: userDetails.name,
    mobileNo: userDetails.mobileNo,
    gstNo: userDetails.gstNo,
    products, // Pass products array directly as per schema
    reference: referenceForm, // Rename referenceForm to reference
  };
  console.log(import.meta.env.VITE_BACKEND_URL+"");
  
  try {
    const response = await fetch(`${import.meta.env.VITE_BACKEND_URL}`+"api/submit", {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(combinedData),
    });

    if (!response.ok) throw new Error('Network response was not ok');
    
    const result = await response.json();
    console.log('Success:', result);
    alert('Data submitted successfully!');
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to submit data. Please try again.');
  }
};


  return (
    <div className="container mx-auto p-4">
      <form onSubmit={handleSubmit} className="bg-gray-100 p-4 rounded-lg">
        <h2 className="text-2xl font-bold mb-4">Reference Form</h2>

        <div className="mb-4">
          <label className="block text-gray-700 font-semibold mb-2" htmlFor="ourReference">Our Reference</label>
          <input
            type="text"
            id="ourReference"
            name="ourReference"
            value={referenceForm.ourReference}
            onChange={handleReferenceChange}
            className="w-full p-2 border rounded"
          />
        </div>

        <div className="mb-4">
          <label className="block text-gray-700 font-semibold mb-2" htmlFor="leadGeneratedBy">Lead Generated By</label>
          <input
            type="text"
            id="leadGeneratedBy"
            name="leadGeneratedBy"
            value={referenceForm.leadGeneratedBy}
            onChange={handleReferenceChange}
            className="w-full p-2 border rounded"
          />
        </div>

        <div className="mb-4">
          <label className="block text-gray-700 font-semibold mb-2" htmlFor="specialRemark">Special Remark</label>
          <textarea
            id="specialRemark"
            name="specialRemark"
            value={referenceForm.specialRemark}
            onChange={handleReferenceChange}
            className="w-full p-2 border rounded"
          />
        </div>

        <div className="mb-4">
          <label className="block text-gray-700 font-semibold mb-2" htmlFor="suggestions">Suggestions</label>
          <textarea
            id="suggestions"
            name="suggestions"
            value={referenceForm.suggestions}
            onChange={handleReferenceChange}
            className="w-full p-2 border rounded"
          />
        </div>

        <button type="submit" className="bg-blue-500 text-white p-2 rounded">Submit Reference</button>
      </form>
    </div>
  );
};

export default ReferenceForm;
